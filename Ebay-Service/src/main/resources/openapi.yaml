openapi: 3.0.0
info:
  title: eBay API
  version: 1.0.0
servers:
  - url: http://localhost:8082
paths:
  /ebay/filter/unit-of-measure/{unit-of-measure}:
    get:
      summary: Get products by unit of measure
      parameters:
        - name: unit-of-measure
          in: path
          description: Unit of measure to filter products
          required: true
          schema:
            $ref: '#/components/schemas/UnitOfMeasure'
      responses:
        '200':
          description: List of products with the specified unit of measure
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

        '400':
          description: Invalid unit of measure parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Invalid unit of measure parameter
                  time:
                    type: string
                    format: date-time
                    example: '2024-09-26T14:30:10Z'
        '404':
          description: No products found with the specified unit of measure
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 404
                  message:
                    type: string
                    example: No products found with the specified unit of measure
                  time:
                    type: string
                    format: date-time
                    example: '2024-09-26T14:30:10Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: '2024-09-26T14:30:10Z'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 503
                  message:
                    type: string
                    example: Service Unavailable
                  time:
                    type: string
                    format: date-time
                    example: '2024-09-26T14:30:10Z'
        default:
          description: Returns error code, message, and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ebay/price/increase/{increase-percent}:
    post:
      summary: Increase prices by a percentage
      parameters:
        - name: increase-percent
          in: path
          description: Percentage to increase prices by
          required: true
          schema:
            type: number
            format: double
            minimum: 0
      responses:
        '200':
          description: Prices increased successfully
        '400':
          description: Invalid percentage value
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Invalid percentage value
                  time:
                    type: string
                    format: date-time
                    example: '2024-09-26T14:30:10Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: '2024-09-26T14:30:10Z'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 503
                  message:
                    type: string
                    example: Service Unavailable
                  time:
                    type: string
                    format: date-time
                    example: '2024-09-26T14:30:10Z'
        default:
          description: Returns error code, message, and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the product
          minimum: 1
        name:
          type: string
          description: Name of the product
          minLength: 1
        coordinates:
          $ref: '#/components/schemas/Coordinates'
          description: Coordinates associated with the product
        creationDate:
          type: string
          format: date-time
          description: Creation date of the product
        price:
          type: number
          format: double
          description: Price of the product
          minimum: 0
          exclusiveMinimum: true
          nullable: true
        partNumber:
          type: string
          description: Part number of the product
          nullable: true
        unitOfMeasure:
          $ref: '#/components/schemas/UnitOfMeasure'
          description: Unit of measure for the product
        manufacturer:
          $ref: '#/components/schemas/Organization'
          description: Manufacturer of the product
      required:
        - id
        - name
        - coordinates
        - creationDate
        - unitOfMeasure
        - manufacturer
    ProductInput:
      type: object
      properties:
        name:
          type: string
          description: Name of the product
          minLength: 1
        coordinates:
          $ref: '#/components/schemas/Coordinates'
          description: Coordinates associated with the product
        price:
          type: number
          format: double
          description: Price of the product
          minimum: 0
          exclusiveMinimum: true
          nullable: true
        partNumber:
          type: string
          description: Part number of the product
          nullable: true
        unitOfMeasure:
          $ref: '#/components/schemas/UnitOfMeasure'
          description: Unit of measure for the product
        manufacturer:
          $ref: '#/components/schemas/OrganizationInput'
          description: Manufacturer of the product
      required:
        - name
        - coordinates
        - unitOfMeasure
        - manufacturer
    Coordinates:
      type: object
      properties:
        x:
          type: integer
          format: int64
          description: X coordinate
        y:
          type: number
          format: float
          description: Y coordinate (maximum 398)
          maximum: 398
      required:
        - x
        - y
    Organization:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the organization
          minimum: 1
        name:
          type: string
          description: Name of the organization
          minLength: 1
        employeesCount:
          type: integer
          format: int64
          description: Number of employees in the organization
          minimum: 1
          nullable: true
        type:
          $ref: '#/components/schemas/OrganizationType'
          description: Type of the organization
          nullable: true
      required:
        - id
        - name
    OrganizationInput:
      type: object
      properties:
        name:
          type: string
          description: Name of the organization
          minLength: 1
        employeesCount:
          type: integer
          format: int64
          description: Number of employees in the organization
          minimum: 1
          nullable: true
        type:
          $ref: '#/components/schemas/OrganizationType'
          description: Type of the organization
          nullable: true
      required:
        - name
    UnitOfMeasure:
      type: string
      description: Unit of measure enumeration
      enum:
        - CENTIMETERS
        - SQUARE_METERS
        - PCS
        - GRAMS
    OrganizationType:
      type: string
      description: Organization type enumeration
      enum:
        - COMMERCIAL
        - PUBLIC
        - GOVERNMENT
        - PRIVATE_LIMITED_COMPANY
        - OPEN_JOINT_STOCK_COMPANY
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 400
        message:
          type: string
          example: An error occurred
        time:
          type: string
          format: date-time
          example: '2024-09-26T14:30:10Z'